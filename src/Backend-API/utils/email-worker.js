const nodemailer = require('nodemailer');
require('dotenv').config()

let emailQueue = [];
let isSendingEmail = false;

const MAX_RETRIES = 2;

const addToEmailQueue = async (mailOptions) => {
  emailQueue.push({ ...mailOptions, retries: 0 });
  if (!isSendingEmail) {
    await sendEmail();
  }
};

const sendEmail = async () => {
  isSendingEmail = true;

  try {
    if (emailQueue.length > 0) {
      const mailOptions = emailQueue.shift();

      const transporter = nodemailer.createTransport({
        host: process.env.MAILGUN_SMTP_SERVER,
        port: process.env.MAILGUN_SMTP_PORT,
        secure: false,
        auth: {
          user: process.env.MAILGUN_SMTP_USERNAME,
          pass: process.env.MAILGUN_SMTP_PASSWORD
        }
      });
      await transporter.sendMail(mailOptions);
      console.log('Email sent successfully');
    }
  } catch (emailError) {
    console.error('Error sending email:', emailError);

    // Check if email can be retried
    if (emailQueue.length > 0 && emailQueue[0].retries < MAX_RETRIES) {
      emailQueue[0].retries++;
      console.log(`Retrying email, attempt #${emailQueue[0].retries}`);
      emailQueue.unshift(emailQueue.shift()); // Move failed email to the front of the queue
    } else {
      // Log the error and move on to the next email
      console.error('Maximum retries reached, moving on to the next email');
    }
  } finally {
    isSendingEmail = false;
    if (emailQueue.length > 0) {
      await sendEmail();
    }
  }
};

const sendConfirmationEmail = async (user, confirmationToken) => {
  try {
    const confirmUrl = `${process.env.CORS_ORIGIN}/confirm/${confirmationToken}`;
    console.log('Confirmation URL generated:', confirmUrl);
    const mailOptions = {
      from: process.env.MAILGUN_SMTP_EMAIL_FROM,
      to: user.email,
      subject: '[LabBooker] Confirm your account',
      html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2>Welcome to LabBooker!</h2>
        <p>Hello ${user.name},</p>
        <p>Thank you for registering with LabBooker. Please confirm your account by clicking the button below:</p>
        <div style="text-align: center; margin: 30px 0;">
          <a href="${confirmUrl}" 
             style="background-color: #4CAF50; color: white; padding: 14px 20px; 
                    text-decoration: none; border-radius: 4px; display: inline-block;">
            Confirm Account
          </a>
        </div>
        <p><small>Or copy and paste this link: ${confirmUrl}</small></p>
        <p><strong>This link will expire in 1 hour.</strong></p>
        <hr style="border: 1px solid #eee; margin: 20px 0;">
        <p style="color: #666; font-size: 12px;">
          AUTOGENERATED EMAIL. DO NOT REPLY.<br>
          © ${new Date().getFullYear()} MayankGroup.tech
        </p>
      </div>
    `
    };

    await addToEmailQueue(mailOptions);
  } catch (err) {
    console.error('Error sending confirmation email:', err);
    throw err;
  }
};

const sendPasswordResetEmail = async (user, resetToken) => {
  const resetUrl = `${process.env.CORS_ORIGIN}/reset-password/${resetToken}`;
  console.log('Reset URL generated:', resetUrl);
  try {
    const mailOptions = {
      from: process.env.MAILGUN_SMTP_EMAIL_FROM,
      to: user.email,
      subject: '[LabBooker] Password Reset',
      html: `  <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2>Password Reset Request</h2>
          <p>Hello ${user.name},</p>
          <p>We received a request to reset your password. Click the button below to create a new password:</p>
          <div style="text-align: center; margin: 30px 0;">
            <a href="${resetUrl}" 
               style="background-color: #4CAF50; color: white; padding: 14px 20px; 
                      text-decoration: none; border-radius: 4px; display: inline-block;">
              Reset Password
            </a>
          </div>
          <p><small>Or copy and paste this link: ${resetUrl}</small></p>
          <p><strong>This link will expire in 1 hour.</strong></p>
          <p style="color: #ff4444;"><strong>If you didn't request this, please ignore this email.</strong></p>
          <hr style="border: 1px solid #eee; margin: 20px 0;">
          <p style="color: #666; font-size: 12px;">
            AUTOGENERATED EMAIL. DO NOT REPLY.<br>
            © ${new Date().getFullYear()} MayankGroup.tech
          </p>
        </div>
      `
    };

    await addToEmailQueue(mailOptions);
  } catch (err) {
    console.error('Error sending password reset email:', err);
    throw err;
  }
};

const normalizeEmail = (email) => {
  if(!email ){
    console.error('Email is required');
    return '';
  }
  let normalizedEmail =email.toLowerCase();
  const atIdx=normalizedEmail.lastIndexOf('@');
  const plusIdx=normalizedEmail.lastIndexOf('+');

  if(plusIdx >-1 && plusIdx < atIdx){
    normalizedEmail = normalizedEmail.substring(0, plusIdx) + normalizedEmail.substring(atIdx);
  }

  const [local, domain] = normalizedEmail.split('@');
  if(domain==='gmail.com'){
    normalizedEmail=`${local.replace(/\./g, '')}@${domain}`;
  }
  return normalizedEmail;
};


module.exports = {
  addToEmailQueue,
  sendConfirmationEmail,
  sendPasswordResetEmail,
  normalizeEmail,
};